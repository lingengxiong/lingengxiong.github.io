<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>呵呵到天亮</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-01-16T06:54:37.102Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>lingengxiong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>lua</title>
    <link href="http://yoursite.com/2020/01/09/lua%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2020/01/09/lua%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</id>
    <published>2020-01-09T13:51:43.000Z</published>
    <updated>2020-01-16T06:54:37.102Z</updated>
    
    <content type="html"><![CDATA[<p>记录使用lua过程中遇到的问题</p><a id="more"></a><h3 id="字符串操作"><a href="#字符串操作" class="headerlink" title="字符串操作"></a>字符串操作</h3><h4 id="截去字符串首尾空格"><a href="#截去字符串首尾空格" class="headerlink" title="截去字符串首尾空格"></a>截去字符串首尾空格</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string.gsub(str, &quot;^%s*(.-)%s*$&quot;, &quot;%1&quot;)  --截掉前后空格</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录使用lua过程中遇到的问题&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>hexo笔记</title>
    <link href="http://yoursite.com/2020/01/03/hexo%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/01/03/hexo%E7%AC%94%E8%AE%B0/</id>
    <published>2020-01-03T10:51:43.000Z</published>
    <updated>2020-01-16T06:56:41.067Z</updated>
    
    <content type="html"><![CDATA[<p>玩hexo过程中遇到的坑</p><a id="more"></a><h3 id="1-hexo安装"><a href="#1-hexo安装" class="headerlink" title="1.hexo安装"></a>1.hexo安装</h3><p>在安装<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">hexo</a>之前，必须确认你已经安装了<a href="http://nodejs.org/" target="_blank" rel="noopener">Node.js</a>和<a href="http://git-scm.com/" target="_blank" rel="noopener">Git</a>。</p><h4 id="1-1-hexo-初始化"><a href="#1-1-hexo-初始化" class="headerlink" title="1.1.hexo 初始化"></a>1.1.hexo 初始化</h4><p>安装 hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>在你想要存放该博客项目的目录下，执行以下命令，这两步都比较耗时，因为要下载许多文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>先预览一下效果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>上面命令可简化成如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>运行成功后，即可在浏览器输入localhost:4000即可看到效果。</p><h4 id="1-2-部署到远端"><a href="#1-2-部署到远端" class="headerlink" title="1.2.部署到远端"></a>1.2.部署到远端</h4><p>我们这里以gitee码云作为远端进行部署，在根目录下找到_config.xml，添加以下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: &#39;git&#39;</span><br><span class="line">  repository:</span><br><span class="line">    #github: git@github.com:lingengxiong&#x2F;lingengxiong.github.io.git</span><br><span class="line">    gitee: git@gitee.com:lingengxiong&#x2F;lingengxiong.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>假如需要部署到多个远端，只需要在repository中配置多个地址即可。</p><p>配置完成后，安装deployer插件，该插件用来将生产的静态文件部署到远端仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>安装完成即可生产静态文件，继而推送到远端</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p><strong>温馨提示：</strong>第一次使用git时会弹出输入框，此时输入git仓库的用户名和密码即可。</p><hr><h3 id="2-hexo-主题安装"><a href="#2-hexo-主题安装" class="headerlink" title="2.hexo 主题安装"></a>2.hexo 主题安装</h3><p>尝试了很多种主题，最后决定用<a href="https://github.com/chaooo/hexo-theme-BlueLake" target="_blank" rel="noopener">BlueLake</a>，一方面是因为布局功能都很符合自己的需求，另一方面则是挺好看的</p><p><img src="http://lgx.itengshe.com/20200106142713-1.jpg" alt=""></p><h4 id="2-1-安装"><a href="#2-1-安装" class="headerlink" title="2.1.安装"></a>2.1.安装</h4><p>安装主题和渲染:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https:&#x2F;&#x2F;github.com&#x2F;chaooo&#x2F;hexo-theme-BlueLake.git themes&#x2F;BlueLake</span><br></pre></td></tr></table></figure><p>Blue是基于jade和stylus写的，所有需要安装hexo-renderer-jade和hexo-renderer-stylus</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-renderer-jade@0.3.0 --save</span><br><span class="line">$ npm install hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p>切到themes/BlueLake，下载主题所需要的库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd themes&#x2F;BlueLake</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><h4 id="2-2-启用主题"><a href="#2-2-启用主题" class="headerlink" title="2.2.启用主题"></a>2.2.启用主题</h4><p>要使用刚下载好的主题，只需要修改根目录下_config.xml配置文件，找到theme字段，修改为BlueLake</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: BuleLake</span><br></pre></td></tr></table></figure><p>依次执行以下命令，然后打开localhost:4000就可以看效果了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="http://lgx.itengshe.com/20200106153336-1.jpg" alt=""></p><h4 id="2-3-配置"><a href="#2-3-配置" class="headerlink" title="2.3 配置"></a>2.3 配置</h4><p>目前的整个工程都还是比较原始的状态，我们的工作就是添加我们自己的东西进去了。</p><h5 id="2-3-1-配置网站头部显示文字"><a href="#2-3-1-配置网站头部显示文字" class="headerlink" title="2.3.1 配置网站头部显示文字"></a>2.3.1 配置网站头部显示文字</h5><p>打开_config.xml，找到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: Hexo</span><br><span class="line">subtitle: &#39;&#39;</span><br><span class="line">description: &#39;&#39;</span><br><span class="line">keywords:</span><br><span class="line">author: John Doe</span><br><span class="line">language: en</span><br><span class="line">timezone: &#39;&#39;</span><br></pre></td></tr></table></figure><p><code>title</code>和<code>subtitle</code>分别是网站主标题和副标题，会显示在网站头部；</p><p><code>description</code>在网站界面不会显示，内容会加入网站源码的<code>meta</code>标签中，主要用于SEO；</p><p><code>author</code>就填写网站所有者的名字，会在网站底部的<code>Copyright</code>处有所显示。</p><h5 id="2-3-2-设置语言"><a href="#2-3-2-设置语言" class="headerlink" title="2.3.2 设置语言"></a>2.3.2 设置语言</h5><p>该主题目前有七种语言：简体中文（zh-CN），繁体中文（zh-TW），英语（en），法语（fr-FR），德语（de-DE），韩语 （ko）,西班牙语（es-ES）；例如选用简体中文，在<code>根_config.yml</code>配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">language: zh-CN</span><br></pre></td></tr></table></figure><h5 id="2-3-3-添加about页"><a href="#2-3-3-添加about页" class="headerlink" title="2.3.3 添加about页"></a>2.3.3 添加about页</h5><p>about页是一个介绍自己的页面，可以在上面写一些自己的联系方式或者其他平台博客链接之类</p><p>在根目录下运行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &#39;about&#39;</span><br></pre></td></tr></table></figure><p>打开主题_config.xml，补充详细信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># About page</span><br><span class="line">about:</span><br><span class="line">  photo_url: ## Your photo e.g. http:&#x2F;&#x2F;cdn.chaooo.top&#x2F;blog&#x2F;themeauthor.jpg</span><br><span class="line">  items:</span><br><span class="line">  - label: email</span><br><span class="line">    url: ## Your email with mailto: e.g.  mailto:zhenggchaoo@gmail.com</span><br><span class="line">    title: ## Your email e.g.  zhenggchaoo@gmail.com</span><br><span class="line">  - label: github</span><br><span class="line">    url: ## Your github&#39;url e.g.  https:&#x2F;&#x2F;github.com&#x2F;chaooo</span><br><span class="line">    title: ## Your github&#39;name e.g.  chaooo</span><br><span class="line">  - label: weibo</span><br><span class="line">    url: ## Your weibo&#39;s url e.g.  http:&#x2F;&#x2F;weibo.com&#x2F;zhengchaooo</span><br><span class="line">    title: ## Your weibo&#39;s name e.g.  秋过冬漫长</span><br></pre></td></tr></table></figure><h5 id="2-3-4-安装-RSS-订阅-和-sitemap-网站地图-插件"><a href="#2-3-4-安装-RSS-订阅-和-sitemap-网站地图-插件" class="headerlink" title="2.3.4 安装 RSS(订阅) 和 sitemap(网站地图) 插件"></a>2.3.4 安装 RSS(订阅) 和 sitemap(网站地图) 插件</h5><p>在根目录打开命令行，运行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-feed --save</span><br><span class="line">$ npm install hexo-generator-sitemap --save</span><br><span class="line">$ npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure><p>添加<code>主题_config.yml</code>配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Plugins:</span><br><span class="line">  hexo-generator-feed</span><br><span class="line">  hexo-generator-sitemap</span><br><span class="line">  hexo-generator-baidu-sitemap</span><br><span class="line"></span><br><span class="line">feed:</span><br><span class="line">  type: atom</span><br><span class="line">  path: atom.xml</span><br><span class="line">  limit: 20</span><br><span class="line"></span><br><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br><span class="line">baidusitemap:</span><br><span class="line">  path: baidusitemap.xml</span><br></pre></td></tr></table></figure><h5 id="2-3-5-更换主题背景"><a href="#2-3-5-更换主题背景" class="headerlink" title="2.3.5 更换主题背景"></a>2.3.5 更换主题背景</h5><p>该主题目前有两种背景，深色和浅色，需要设置为深色只需要修改主题_config.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Theme tone</span><br><span class="line">dark: false #true&#x2F;false</span><br></pre></td></tr></table></figure><h5 id="2-3-6-添加文章版权信息"><a href="#2-3-6-添加文章版权信息" class="headerlink" title="2.3.6 添加文章版权信息"></a>2.3.6 添加文章版权信息</h5><p>修改主题_config.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Theme tone</span><br><span class="line">#Copyright</span><br><span class="line">copyright: </span><br><span class="line">  enable: true #true&#x2F;false  </span><br><span class="line">  describe: 转载请注明出处(必须保留原文作者署名原文链接) #自定义描述替换默认描述</span><br></pre></td></tr></table></figure><h4 id="2-4-添加本地搜索"><a href="#2-4-添加本地搜索" class="headerlink" title="2.4 添加本地搜索"></a>2.4 添加本地搜索</h4><p>默认本地搜索是用原生JS写的，但还需要HEXO插件创建的JSON数据文件配合。安装插件<a href="https://github.com/alexbruno/hexo-generator-json-content" target="_blank" rel="noopener">hexo-generator-json-content</a>来创建JSON数据文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-json-content@2.2.0 --save</span><br></pre></td></tr></table></figure><p>然后在<code>根_config.yml</code>添加配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">jsonContent:</span><br><span class="line">  meta: false</span><br><span class="line">  pages: false</span><br><span class="line">  posts:</span><br><span class="line">    title: true</span><br><span class="line">    date: true</span><br><span class="line">    path: true</span><br><span class="line">    text: true</span><br><span class="line">    raw: false</span><br><span class="line">    content: false</span><br><span class="line">    slug: false</span><br><span class="line">    updated: false</span><br><span class="line">    comments: false</span><br><span class="line">    link: false</span><br><span class="line">    permalink: false</span><br><span class="line">    excerpt: false</span><br><span class="line">    categories: false</span><br><span class="line">    tags: true</span><br></pre></td></tr></table></figure><p>最后在<code>主题_config.yml</code>添加配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">local_search: true</span><br></pre></td></tr></table></figure><h4 id="2-5-首页添加文章置顶"><a href="#2-5-首页添加文章置顶" class="headerlink" title="2.5 首页添加文章置顶"></a>2.5 首页添加文章置顶</h4><p>在根目录下打开命令行窗口安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm uninstall hexo-generator-index --save</span><br><span class="line">$ npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure><p>假如文章需要添加置顶，只需要在Front-matter中加上top: true即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: BlueLake博客主题的详细配置</span><br><span class="line">tags: [hexo,BlueLake]</span><br><span class="line">categories: Hexo博客折腾</span><br><span class="line">top: true</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>2.6 修改站点图标</p><p>站点图标存放在主题的<code>Source</code>目录下，已经默认为您准备了两张图片。您也可以自己设计站点LOGO。<br>您需要准备一张ico格式并命名为** favicon.ico <strong>，请将其放入hexo目录的<code>source</code>文件夹，建议大小：32px X 32px。<br>您需要为苹果设备添加网站徽标，请命名为</strong> apple-touch-icon.png **的图像放入hexo目录的“source”文件夹中，建议大小为：114px X 114px。<br>(有很多网站都可以在线生成ico格式的图片。)</p><hr><h3 id="3-笔记仓库与博客项目分离"><a href="#3-笔记仓库与博客项目分离" class="headerlink" title="3. 笔记仓库与博客项目分离"></a>3. 笔记仓库与博客项目分离</h3><p>我们可以看到目前文章放在source/_posts目录下，我们不可能每次写笔记都跑到这里写，这里我采用git子模块的形式，我们平常笔记在自己的笔记仓库里写，写完推到远端仓库，更新博客只需要先拉一下笔记仓库里的文件，再更新到线上博客。这样做博客项目只负责发布，不负责编辑笔记。我的博客笔记放在<a href="https://gitee.com/lingengxiong/blog-note.git" target="_blank" rel="noopener">https://gitee.com/lingengxiong/blog-note.git</a></p><h4 id="3-1添加子模块的方法"><a href="#3-1添加子模块的方法" class="headerlink" title="3.1添加子模块的方法"></a>3.1添加子模块的方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule add 仓库名 路径</span><br></pre></td></tr></table></figure><p>其中，仓库地址是指子模块仓库地址，路径指将子模块放置在当前工程下的路径。<br>注意：路径不能以 / 结尾（会造成修改不生效）、不能是现有工程已有的目录（不能順利 Clone）</p><h4 id="3-2删除子模块方法"><a href="#3-2删除子模块方法" class="headerlink" title="3.2删除子模块方法"></a>3.2删除子模块方法</h4><p>submodule的删除稍微麻烦点：首先，要在“.gitmodules”文件中删除相应配置信息。然后，执行“git rm –cached ”命令将子模块所在的文件从git中删除。</p><p>故先把source/_post文件夹删除，然后执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule add https:&#x2F;&#x2F;gitee.com&#x2F;lingengxiong&#x2F;blog-note.git source&#x2F;_posts&#x2F;</span><br></pre></td></tr></table></figure><p>这样我们已经成功把笔记仓库引入博客项目内，以后只需要定时拉取最新内容进行发布即可</p><h4 id="3-3-README-md等文件不生成博客内容"><a href="#3-3-README-md等文件不生成博客内容" class="headerlink" title="3.3  README.md等文件不生成博客内容"></a>3.3  README.md等文件不生成博客内容</h4><p>我们引入的博客仓库中包含有该仓库的README.md文件，这些文件不需要生成文章，可以修改根目录_config.xml文件进行屏蔽：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">skip_render: [&#39;_posts&#x2F;**&#x2F;README.md&#39;,&#39;_posts&#x2F;**&#x2F;README.en.md&#39;]</span><br></pre></td></tr></table></figure><h3 id="4-hexo备份与恢复"><a href="#4-hexo备份与恢复" class="headerlink" title="4.hexo备份与恢复"></a>4.hexo备份与恢复</h3><h4 id="3-1-备份"><a href="#3-1-备份" class="headerlink" title="3.1.备份"></a>3.1.备份</h4><p>在公司好不容易把工程搭建起来，却到了下班的时候，回家想继续搞岂不是蛋疼得再配置一遍？这可不行，而且要是电脑坏了怎么办，前面的时间岂不是白费，所以肯定得做好备份~</p><p>最开始想到的是用传统的git 进行备份，但在网上搜了一下，发现前辈们早已想出更懒的办法，并做成插件—hexo-git-backup，依旧是备份到github，但用起来更加便捷。</p><p>首先安装该插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-git-backup --save</span><br></pre></td></tr></table></figure><p>然后到你的博客根目录的_config.xml配置文件中添加如下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#备份博客</span><br><span class="line">backup:</span><br><span class="line">  type: git</span><br><span class="line">  theme: hexo-theme-yilia-master</span><br><span class="line">  message: Back up my blog</span><br><span class="line">  repository:</span><br><span class="line">    github: git@github.com:lingengxiong&#x2F;lingengxiong.github.io.git，backup</span><br><span class="line">    gitee: git@gitee.com:lingengxiong&#x2F;lingengxiong.git,backup</span><br></pre></td></tr></table></figure><p>参数解释：</p><ul><li>theme：你要备份的主题名称</li><li>message：自定义提交信息</li><li>repository：仓库名，注意仓库地址后面要添加一个分支名，比如我就创建了一个 backup 分支</li></ul><p>我这里备份了两份，一份到github，另一份备份到码云，不需要的只配置一个即可，实际上我们是在放博客静态文件的仓库上拉了一个backup分支，如果你不放心，也可新建一个仓库用来存放整个博客工程</p><p>实际上，并不是整个工程都需要备份的，只需要备份关键几个文件夹即可，其余到时再次生成即可</p><p>1.生成.gitignore文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch .gitignore</span><br></pre></td></tr></table></figure><p>2.输入要忽略的文件及文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">.log</span><br><span class="line">node_modules&#x2F;</span><br><span class="line">public&#x2F;</span><br><span class="line">.deploy&#x2F;</span><br></pre></td></tr></table></figure><p>3.最后用以下命令备份博客：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo backup</span><br></pre></td></tr></table></figure><p>或者简写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo b</span><br></pre></td></tr></table></figure><h4 id="2-恢复"><a href="#2-恢复" class="headerlink" title="2.恢复"></a>2.恢复</h4><p>已经备份好的hexo，到新发电脑只需要使用以下步骤即可恢复，无需从头开始配置，这里以我的仓库地址为例，实际情况改成自己的地址即可</p><p>1.先安装hexo</p><p><code>npm install -g hexo-cli</code></p><p>2.把存在远端的备份git clone下来</p><p><code>git clone https://gitee.com/lingengxiong/lingengxiong.git</code></p><p>这里备份在backup分支，可以直接下载对应分支</p><p><code>git clone -b backup https://gitee.com/lingengxiong/lingengxiong.git</code></p><p>3.下载所需要的库文件</p><p><code>npm install</code></p><p>4.下载推送工具deployer</p><p><code>npm install hexo-deployer-git</code></p><p>5.接下来就可以用熟悉的命令生成博客站点了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>正常情况下以上步骤完成后即可在浏览器用localhost:4000打开你的博客</p><p>继而发布到远端</p><p><code>hexo d</code></p><h3 id="5-添加评论系统gitalk"><a href="#5-添加评论系统gitalk" class="headerlink" title="5.添加评论系统gitalk"></a>5.添加评论系统gitalk</h3><h4 id="5-1申请"><a href="#5-1申请" class="headerlink" title="5.1申请"></a>5.1申请</h4><p>第三方评论系统很多，如</p><p><a href="http://duoshuo.com/" target="_blank" rel="noopener">多说评论</a>、<a href="https://disqus.com/" target="_blank" rel="noopener">Disqus评论</a>、<a href="https://livere.com/" target="_blank" rel="noopener">来必力评论</a>、<a href="http://www.uyan.cc/" target="_blank" rel="noopener">友言评论</a>、<a href="https://gentie.163.com/info.html" target="_blank" rel="noopener">网易云跟帖评论</a>、<a href="http://changyan.kuaizhan.com/" target="_blank" rel="noopener">畅言评论</a>、基于Github Issue的<a href="https://gitalk.github.io/" target="_blank" rel="noopener">GITALK</a></p><p>但国内的有写时不时就没法用了，所以这里还是使用gitalk</p><p>1.<a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">申请GitHub Application</a></p><p><img src="http://lgx.itengshe.com/20200115194943-1.png" alt=""></p><ul><li>Application name： 应用名称，随便起</li><li>Homepage URL： 网站URL，对应自己博客地址</li><li>Application description ：描述，随意</li><li>Authorization callback URL：# 网站URL，博客地址就好</li><li>点击注册，页面会出现其中<strong>Client ID</strong>和<strong>Client Secret</strong>在后面的配置中需要用到</li></ul><h4 id="5-2-配置"><a href="#5-2-配置" class="headerlink" title="5.2 配置"></a>5.2 配置</h4><p>在主题_config.xml配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">comment:</span><br><span class="line">  gitalk:</span><br><span class="line">    enable: true </span><br><span class="line">    ## If you want to use Gitment comment system please set the value to true.</span><br><span class="line">    owner: lingengxiong </span><br><span class="line">    ## Your GitHub ID, e.g. username</span><br><span class="line">    repo: blogtalk</span><br><span class="line">    ## The repository to store your comments, make sure you&#39;re the repo&#39;s owner, e.g. gitalk.github.io</span><br><span class="line">    client_id: </span><br><span class="line">    ## GitHub client ID, e.g. 75752dafe7907a897619</span><br><span class="line">    client_secret: </span><br><span class="line">    ## GitHub client secret, e.g. ec2fb9054972c891289640354993b662f4cccc50</span><br><span class="line">    admin: lingengxiong</span><br><span class="line">    ## Github repo owner and collaborators, only these guys can initialize github issues.</span><br><span class="line">    language: zh-CN </span><br><span class="line">    ## Language</span><br><span class="line">    pagerDirection: last </span><br><span class="line">    # Comment sorting direction, available values are last and first.</span><br></pre></td></tr></table></figure><p><strong>注意:</strong> </p><p>1.repo ,存放评论的仓库，这里我们新建一个名为blogtalk的仓库，这里只需要填入blogtalk即可，而不是完整地址</p><h4 id="5-3-踩坑"><a href="#5-3-踩坑" class="headerlink" title="5.3 踩坑"></a>5.3 踩坑</h4><h5 id="5-3-1-Error-Not-Found"><a href="#5-3-1-Error-Not-Found" class="headerlink" title="5.3.1 Error:Not Found"></a>5.3.1 Error:Not Found</h5><p><img src="http://lgx.itengshe.com/20200115200837-1.png" alt=""></p><p>发现是gittalk中的信息填写错了，name随便写；Homepage URL是你的仓库的名字，Authorization callback URL如果你指向了新</p><p>的域名就填新的，比如说我指向了域名<a href="http://blog.lgx123.cn/；否则也写仓库的名字就可以。" target="_blank" rel="noopener">http://blog.lgx123.cn/；否则也写仓库的名字就可以。</a></p><h5 id="5-3-2未找到相关Issues进行评论"><a href="#5-3-2未找到相关Issues进行评论" class="headerlink" title="5.3.2未找到相关Issues进行评论"></a>5.3.2未找到相关Issues进行评论</h5><p><img src="http://lgx.itengshe.com/20200115195902-1.png" alt=""></p><p>1.理想状态登录一下github账号即可，假如点击后返回首页，那应该是配置有问题，检测gitalk各项参数</p><p>2.配置完成未发布到线上，使用localhost:4000访问，也会出现这种情况，点击登录会跳到线上工程地址，此时只需要试试发布到线上</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;玩hexo过程中遇到的坑&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
</feed>
